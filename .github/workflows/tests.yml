name: Tests

on:
  push:
    branches: ['*']
  pull_request:
    branches: [master]

jobs:
  build-dep:
    name: Build dep images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check UI images with current sha
        id: check-ui
        continue-on-error: true
        run: |
          docker manifest inspect ghcr.io/${{ github.repository }}/test-ui:${{ github.sha }}

      - name: Build UI images
        uses: docker/build-push-action@v6
        if: ${{ steps.check-ui.outcome != 'success' }}
        with:
          pull: true
          push: true
          target: dev-ui
          tags: ghcr.io/${{ github.repository }}/test-ui:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Check API images with current sha
        id: check-api
        continue-on-error: true
        run: |
          docker manifest inspect ghcr.io/${{ github.repository }}/test-api:${{ github.sha }}

      - name: Build API images
        uses: docker/build-push-action@v6
        if: ${{ steps.check-api.outcome != 'success' }}
        with:
          pull: true
          push: true
          target: dev-api
          tags: ghcr.io/${{ github.repository }}/test-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-api:
    name: Test API
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs:
    - build-dep
    container:
      image: ghcr.io/${{ github.repository }}/test-api:${{ github.sha }}
      env:
        PHOTOVIEW_DATABASE_DRIVER: sqlite
        PHOTOVIEW_SQLITE_PATH: photoview.db

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Cache go build
      uses: actions/cache@v3
      with:
        path: /go/pkg
        key: ${{ runner.os }}-api-${{ hashFiles('**/go.mod', '**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-api-

    - name: Build API
      run: |
        git config --global --add safe.directory "`pwd`"
        cd api
        go env
        go get -t -v ./...
        go build -v ./...

    - name: Test API
      run: |
        cd api
        go test ./... -v -database -filesystem -p 1 -coverprofile=coverage.txt -covermode=atomic
