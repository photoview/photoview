name: Tests

on:
  push:
    branches: ['*']
  pull_request:
    branches: [master]

jobs:
  test-ui:
    name: Test UI
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Build test image
      uses: docker/build-push-action@v6
      with:
        pull: true
        push: false
        load: true
        target: prepare-ui
        tags: photoview/photoview-ui
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Cache NPM dependencies
      uses: actions/cache@v4
      with:
        path: ./ui/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Test
      run: ./scripts/test/ui.sh

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        flags: ui

  test-api:
    name: Test API
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: ['sqlite', 'mysql', 'postgres']

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Build test image
      uses: docker/build-push-action@v6
      with:
        pull: true
        push: false
        load: true
        target: prepare-api
        tags: photoview/photoview-api
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test
      run: ./scripts/test/api.sh ${{ matrix.database }}

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        files: coverage-${{ matrix.database }}.txt
        flags: ui
