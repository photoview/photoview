name: photoview

services:
  dev-ui:
    image: photoview/photoview-ui
    build:
      context: .
      dockerfile: Dockerfile
      target: dev-ui
    env_file: ui/example.env
    volumes:
    - .:/app:rw
    ports:
    - 1234:1234
    command:
    - /bin/bash
    - -c
    - |
      npm ci
      npm run mon

  dev-api:
    image: photoview/photoview-api
    build:
      context: .
      dockerfile: Dockerfile
      target: dev-api
    env_file: api/example.env
    volumes:
    - .:/app:rw
    ports:
    - 4001:4001
    command:
    - /bin/bash
    - -c
    - |
      source /app/scripts/set_compiler_env.sh 
      reflex -g '*.go' -s -- go run .

  test-ui:
    profiles:
    - test
    image: photoview/photoview-ui
    build:
      context: .
      dockerfile: Dockerfile
      target: ui
    env_file: scripts/test/env
    volumes:
    - .:/app:rw
    command:
    - /bin/bash
    - -c
    - |
      npm clean-install
      npm run test:ci

  test-api-sqlite:
    profiles:
    - test
    image: photoview/photoview-api
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    env_file: scripts/test/env
    volumes:
    - .:/app:rw
    command:
    - /bin/bash
    - -c
    - |
      source /app/scripts/set_compiler_env.sh
      go test ./... -v -database -filesystem -p 1 -coverprofile=coverage.txt -covermode=atomic

  test-api-mysql:
    profiles:
    - test
    image: photoview/photoview-api
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    depends_on:
    - mysql
    environment:
    - PHOTOVIEW_DATABASE_DRIVER=mysql
    env_file: scripts/test/env
    volumes:
    - .:/app:rw
    command:
    - /bin/bash
    - -c
    - |
      source /app/scripts/set_compiler_env.sh
      go test ./... -v -database -filesystem -p 1 -coverprofile=coverage.txt -covermode=atomic

  test-api-postgres:
    profiles:
    - test
    image: photoview/photoview-api
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    depends_on:
    - postgres
    environment:
    - PHOTOVIEW_DATABASE_DRIVER=postgres
    env_file: scripts/test/env
    volumes:
    - .:/app:rw
    command:
    - /bin/bash
    - -c
    - |
      source /app/scripts/set_compiler_env.sh
      go test ./... -v -database -filesystem -p 1 -coverprofile=coverage.txt -covermode=atomic

  mysql:
    image: mariadb:lts
    environment:
      MYSQL_DATABASE: photoview_test
      MYSQL_USER: photoview
      MYSQL_PASSWORD: photosecret
      MYSQL_RANDOM_ROOT_PASSWORD: yes
    healthcheck:
      test:
      - CMD
      - mariadb-admin
      - --user=photoview
      - --password=photosecret
      - ping
      interval: 20s
      timeout: 5s
      retries: 10
    expose:
    - "3306"

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: photoview_test
      POSTGRES_USER: photoview
      POSTGRES_PASSWORD: photosecret
    healthcheck:
      test:
      - CMD
      - pg_isready
      interval: 20s
      timeout: 5s
      retries: 10
    expose:
    - "5432"
